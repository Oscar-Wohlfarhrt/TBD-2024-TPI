@page "/MonthCertificateDetailed"
@rendermode InteractiveServer

@using System.Data
@inject ISqlLinkerService dbLink

<PageTitle>Certificado Mensual</PageTitle>

<h1>Resumen de certificado mensual</h1>

@{string[] opts = GetCertificates();}

<select class="form-select" aria-label="Default select date" @onchange=@((e) => certIndex = int.Parse((string)(e.Value ?? "-1")))>
  <option value="-1" selected>Seleccione un certificado</option>
  
  @for(int i = 0;i<opts.Length;i++){
    <option value="@i">@opts[i]</option>
  }
</select>
<br>

@if(certIndex>=0){
    <h2>Detalles del certificado</h2>

    DataRow? rowCert = certTable?.Rows[certIndex];
    <p>Fecha de inicio: @rowCert?["StartDate"]</p>
    <p>Fecha de fin: @rowCert?["EndDate"]</p>
    <p>Compañia: @rowCert?["CompanyName"]</p>
    <p>Compañia contrante: @rowCert?["ElectricCompanyName"]</p>

    <h2>Trabajos certificados</h2>

    DataTableAdapter? worksTable;
    @if((worksTable=dbLink?.GetView("[dbo].[WorkPerCertificate]",$"CreationDate = '{rowCert?["CreationDate"]:yyyy-MM-dd hh:mm:ss}'",""))!=null ){
        <DynamicTable Table="worksTable" />
    }

    <h2>Materiales utilizados</h2>
    //CreationDate = {rowCert["CreationDate"]}
    DataTableAdapter? matsTable;
    @if((matsTable=dbLink?.GetView("[dbo].[CostoMensualXMaterial]",$"CreationDate = '{rowCert?["CreationDate"]:yyyy-MM-dd hh:mm:ss}'",""))!=null ){
        <DynamicTable Table="matsTable" />
    }
}

@code{
    DataTableAdapter? certTable;

    int certIndex = -1;
    private string[] GetCertificates(){
        certTable = dbLink.GetView("[ger].[MonthCertificateWithCompany]");
        if(certTable != null)
        {
            List<string> options = [];
            foreach(DataRow row in certTable.Rows){
                options.Add($"Certificado del {row["CreationDate"]:yyyy-MM-dd} para {row["StartDate"]:yyyy-MM}");
            }
            return [..options];
        }
        return [];
    }
}